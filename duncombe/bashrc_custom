# 

set +o noclobber

unalias cp
unalias mv
unalias rm
unalias ll
unalias la
unalias l
unalias dir
unalias vdir
unalias m
unalias ..
unalias ...
unalias md
unalias cl
unalias du
unalias treeacl
unalias em
unalias eqq

unset VISUAL
unset GREP_OPTIONS
unset GREP_COLOR
export EDITOR="vim"

# And now for stuff that should have been there.
# except what about the infinite history in bashrc?
HISTCONTROL=ignoredups:ignorespace
HISTSIZE=2000
HISTFILESIZE=20000

export AWKPATH=$AWKPATH:~/PROGS
export RSYNC_RSH=ssh

alias vu="view"
alias ac="acroread"
alias newac="acroread -openInNewWindow"
alias pd="dirs -v | tac"
alias ad='cd $(/bin/pwd)'
alias lsd='ls -ld .* * | grep ^d'
alias lesslog="less +/error\|warning "

if [ -e "/usr/bin/lesspipe" ]; then LESSPIPE=/usr/bin/lesspipe; 
elif [ -e "/usr/bin/lesspipe.sh" ]; then LESSPIPE=/usr/bin/lesspipe.sh;
fi

if [ -x $LESSPIPE ] && eval "$(SHELL=/bin/sh $LESSPIPE)"

export LESS="-j3 -a -M -Q -i"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac


if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
	# and for some ridiculous reason, make is carefully
	# omitted from the list of programs that benefits from
	# completion. Why? WTFK?!
	# Anyway, this should work...
	complete -F _longopt -o filenames make
	# while here, lets help newac be sensible
	complete -o filenames -o dirnames -f -X '!*.@(pdf|PDF)' newac 
	# complete -o filenames -o dirnames -f -X '!*.@(m|sh|txt|tex|html)' vi 
	# note that this is normal extglob pattern matching (man bash)
	# note the whole is negated because -X exclude-filters, so we are 
	# excluding everything except files starting with ., files with .m,
	# .sh, etc., extensions, and files without any . in them
	complete -o filenames -o dirnames -f -X '!@(.*|*.@(m|sh|txt|tex|html|awk|sed|bat)|!(*.*))' vi vim
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
	# and for some ridiculous reason, make is carefully
	# omitted from the list of programs that benefits from
	# completion. Why? WTFK?!
	# Anyway, this should work...
	complete -F _longopt -o filenames make
	# while here, lets help newac be sensible
	complete -o filenames -o dirnames -f -X '!*.@(pdf|PDF)' newac 
	# complete -o filenames -o dirnames -f -X '!*.@(m|sh|txt|tex|html)' vi 
	# note that this is normal extglob pattern matching (man bash)
	# note the whole is negated because -X exclude-filters, so we are 
	# excluding everything except files starting with ., files with .m,
	# .sh, etc., extensions, and files without any . in them
	complete -o filenames -o dirnames -f -X '!@(.*|*.@(m|sh|txt|tex|html|awk|sed|bat)|!(*.*))' vi vim
fi


